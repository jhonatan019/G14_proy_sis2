/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vistas;

import baseDatos.ConexionBD;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class CrearSucursal extends javax.swing.JFrame {

    private Connection conexion;
    private DefaultTableModel modelo;
    
    public CrearSucursal() {
        initComponents();
        setResizable(false);
        setTitle("Crear Sucursal");
        setLocationRelativeTo(null);
        
        // Inicializar conexión
        try {
            conexion = ConexionBD.getConnection();
            inicializarTabla();
            cargarSucursales();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this,
                "Error al conectar con la base de datos: " + e.getMessage(),
                "Error de Conexión",
                JOptionPane.ERROR_MESSAGE);
        }
    }

    private void inicializarTabla() {
        modelo = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        
        modelo.addColumn("ID");
        modelo.addColumn("Nombre");
        modelo.addColumn("Dirección");
        modelo.addColumn("Referencia");
        modelo.addColumn("Número de Salas");
        
        tabla_sucursal.setModel(modelo);
    }

    private void cargarSucursales() {
        modelo.setRowCount(0);
        String sql = "SELECT s.*, COUNT(sa.ID_SALA) as num_salas " +
                    "FROM sucursal s " +
                    "LEFT JOIN sala sa ON s.ID_SUCURSAL = sa.ID_SUCURSAL " +
                    "GROUP BY s.ID_SUCURSAL";
                    
        try (PreparedStatement stmt = conexion.prepareStatement(sql);
             ResultSet rs = stmt.executeQuery()) {
            
            while (rs.next()) {
                Object[] fila = {
                    rs.getInt("ID_SUCURSAL"),
                    rs.getString("NOMBRE_SUCURSAL"),
                    rs.getString("DIRECCION_SUCURSAL"),
                    rs.getString("REFERENCIA_SUCURSAL"),
                    rs.getInt("num_salas")
                };
                modelo.addRow(fila);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al cargar sucursales: " + e.getMessage());
        }
    }

    private boolean existeDireccion(String direccion, Integer idExcluir) {
        String sql = "SELECT COUNT(*) FROM sucursal WHERE DIRECCION_SUCURSAL = ? " +
                    (idExcluir != null ? "AND ID_SUCURSAL != ?" : "");
        
        try (PreparedStatement stmt = conexion.prepareStatement(sql)) {
            stmt.setString(1, direccion);
            if (idExcluir != null) {
                stmt.setInt(2, idExcluir);
            }
            
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                return rs.getInt(1) > 0;
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al verificar dirección: " + e.getMessage());
        }
        return false;
    }

    private void crearSalas(int idSucursal) throws SQLException {
        String sql = "INSERT INTO sala (ID_SUCURSAL, NUMERO_SALA, CAPACIDAD_SALA, ESTADO_SALA) VALUES (?, ?, ?, 1)";
        
        try (PreparedStatement stmt = conexion.prepareStatement(sql)) {
            for (int i = 1; i <= 5; i++) {
                stmt.setInt(1, idSucursal);
                stmt.setString(2, String.valueOf(i));
                stmt.setInt(3, 50); // Capacidad por defecto
                stmt.executeUpdate();
            }
        }
    }
    private void limpiarCampos() {
        txt_nombre.setText("");
        txt_direccion.setText("");
        txt_referencia.setText("");
        tabla_sucursal.clearSelection();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btn_guardar = new javax.swing.JButton();
        txt_nombre = new javax.swing.JTextField();
        txt_direccion = new javax.swing.JTextField();
        txt_referencia = new javax.swing.JTextField();
        btn_cancelar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_sucursal = new javax.swing.JTable();
        btn_modificar = new javax.swing.JButton();
        btn_eliminar = new javax.swing.JButton();
        btn_nuevo = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(39, 29, 41));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("REGISTRO DE SUCURSAL");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 30, 710, 50));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("NOMBRE:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("DIRECCION:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Nro REFERENCIA:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 140, -1, -1));

        btn_guardar.setBackground(new java.awt.Color(255, 0, 0));
        btn_guardar.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btn_guardar.setForeground(new java.awt.Color(255, 255, 255));
        btn_guardar.setText("Guardar");
        btn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 670, 160, 50));

        txt_nombre.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        txt_nombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nombreActionPerformed(evt);
            }
        });
        jPanel1.add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, 296, 45));

        txt_direccion.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        txt_direccion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(txt_direccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 160, 296, 45));

        txt_referencia.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        txt_referencia.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(txt_referencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 130, 296, 45));

        btn_cancelar.setBackground(new java.awt.Color(255, 0, 0));
        btn_cancelar.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btn_cancelar.setForeground(new java.awt.Color(255, 255, 255));
        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_cancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 670, 160, 50));

        tabla_sucursal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla_sucursal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_sucursalMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_sucursal);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, 1070, -1));

        btn_modificar.setBackground(new java.awt.Color(255, 0, 0));
        btn_modificar.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btn_modificar.setForeground(new java.awt.Color(255, 255, 255));
        btn_modificar.setText("Modificar");
        btn_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_modificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 670, 160, 50));

        btn_eliminar.setBackground(new java.awt.Color(255, 0, 0));
        btn_eliminar.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btn_eliminar.setForeground(new java.awt.Color(255, 255, 255));
        btn_eliminar.setText("Eliminar");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 670, 160, 50));

        btn_nuevo.setBackground(new java.awt.Color(255, 0, 0));
        btn_nuevo.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btn_nuevo.setForeground(new java.awt.Color(255, 255, 255));
        btn_nuevo.setText("Nuevo");
        btn_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nuevoActionPerformed(evt);
            }
        });
        jPanel1.add(btn_nuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 670, 160, 50));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/LOGOCENTRO.jpg"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 960, 600));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1240, 750));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarActionPerformed
      String nombre = txt_nombre.getText().trim();
        String direccion = txt_direccion.getText().trim();
        String referencia = txt_referencia.getText().trim();
        
        if (nombre.isEmpty() || direccion.isEmpty() || referencia.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios");
            return;
        }
        
        if (existeDireccion(direccion, null)) {
            JOptionPane.showMessageDialog(this, "Ya existe una sucursal en esta dirección");
            return;
        }
        
        String sql = "INSERT INTO sucursal (NOMBRE_SUCURSAL, DIRECCION_SUCURSAL, REFERENCIA_SUCURSAL) VALUES (?, ?, ?)";
        
        try {
            conexion.setAutoCommit(false);
            
            try (PreparedStatement stmt = conexion.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS)) {
                stmt.setString(1, nombre);
                stmt.setString(2, direccion);
                stmt.setString(3, referencia);
                
                stmt.executeUpdate();
                
                ResultSet rs = stmt.getGeneratedKeys();
                if (rs.next()) {
                    int idSucursal = rs.getInt(1);
                    crearSalas(idSucursal);
                }
                
                conexion.commit();
                JOptionPane.showMessageDialog(this, "Sucursal creada exitosamente");
                limpiarCampos();
                cargarSucursales();
            }
        } catch (SQLException e) {
            try {
                conexion.rollback();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            JOptionPane.showMessageDialog(this, "Error al guardar: " + e.getMessage());
        } finally {
            try {
                conexion.setAutoCommit(true);
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btn_guardarActionPerformed

    private void txt_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nombreActionPerformed

    }//GEN-LAST:event_txt_nombreActionPerformed

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        MenuAdminBar menu = new MenuAdminBar();
        menu.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
    int fila = tabla_sucursal.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione una sucursal para eliminar");
            return;
        }
        
        int id = (int) modelo.getValueAt(fila, 0);
        
        int confirmacion = JOptionPane.showConfirmDialog(this,
            "¿Está seguro de eliminar esta sucursal? Se eliminarán también todas sus salas.",
            "Confirmar eliminación",
            JOptionPane.YES_NO_OPTION);
            
        if (confirmacion == JOptionPane.YES_OPTION) {
            try {
                conexion.setAutoCommit(false);
                
                // Primero eliminamos las salas
                String sqlSalas = "DELETE FROM sala WHERE ID_SUCURSAL = ?";
                try (PreparedStatement stmtSalas = conexion.prepareStatement(sqlSalas)) {
                    stmtSalas.setInt(1, id);
                    stmtSalas.executeUpdate();
                }
                
                // Luego eliminamos la sucursal
                String sqlSucursal = "DELETE FROM sucursal WHERE ID_SUCURSAL = ?";
                try (PreparedStatement stmtSucursal = conexion.prepareStatement(sqlSucursal)) {
                    stmtSucursal.setInt(1, id);
                    stmtSucursal.executeUpdate();
                }
                
                conexion.commit();
                JOptionPane.showMessageDialog(this, "Sucursal eliminada exitosamente");
                limpiarCampos();
                cargarSucursales();
            } catch (SQLException e) {
                try {
                    conexion.rollback();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
                JOptionPane.showMessageDialog(this, "Error al eliminar: " + e.getMessage());
            } finally {
                try {
                    conexion.setAutoCommit(true);
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_btn_eliminarActionPerformed

    private void btn_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificarActionPerformed
     int fila = tabla_sucursal.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione una sucursal para modificar");
            return;
        }
        
        int id = (int) modelo.getValueAt(fila, 0);
        String nombre = txt_nombre.getText().trim();
        String direccion = txt_direccion.getText().trim();
        String referencia = txt_referencia.getText().trim();
        
        if (nombre.isEmpty() || direccion.isEmpty() || referencia.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios");
            return;
        }
        
        if (existeDireccion(direccion, id)) {
            JOptionPane.showMessageDialog(this, "Ya existe una sucursal en esta dirección");
            return;
        }
        
        String sql = "UPDATE sucursal SET NOMBRE_SUCURSAL = ?, DIRECCION_SUCURSAL = ?, REFERENCIA_SUCURSAL = ? WHERE ID_SUCURSAL = ?";
        
        try (PreparedStatement stmt = conexion.prepareStatement(sql)) {
            stmt.setString(1, nombre);
            stmt.setString(2, direccion);
            stmt.setString(3, referencia);
            stmt.setInt(4, id);
            
            stmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Sucursal modificada exitosamente");
            limpiarCampos();
            cargarSucursales();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al modificar: " + e.getMessage());
        }
    }//GEN-LAST:event_btn_modificarActionPerformed

    private void btn_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nuevoActionPerformed
     limpiarCampos();
    }//GEN-LAST:event_btn_nuevoActionPerformed

    private void tabla_sucursalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_sucursalMouseClicked
    int fila = tabla_sucursal.getSelectedRow();
        if (fila != -1) {
            txt_nombre.setText((String) modelo.getValueAt(fila, 1));
            txt_direccion.setText((String) modelo.getValueAt(fila, 2));
            txt_referencia.setText((String) modelo.getValueAt(fila, 3));
        }
    
    }//GEN-LAST:event_tabla_sucursalMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrearSucursal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrearSucursal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrearSucursal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrearSucursal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrearSucursal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton btn_guardar;
    private javax.swing.JButton btn_modificar;
    private javax.swing.JButton btn_nuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla_sucursal;
    private javax.swing.JTextField txt_direccion;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_referencia;
    // End of variables declaration//GEN-END:variables
}
